{"version":3,"file":"static/js/447.ab9fa750.chunk.js","mappings":"uPACaA,EAAaC,EAAAA,GAAAA,GAAH,yCAIVC,EAAaD,EAAAA,GAAAA,GAAH,6L,SC2BvB,EA3BgB,WACd,OAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,sBAA0BH,EAASD,EACpC,GAAE,CAACC,KAGF,8BACGF,EAAQM,OAAS,GAChB,uEAEA,SAACV,EAAD,UACGI,EAAQO,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,UAACZ,EAAD,YACE,uBAAIW,KACJ,4CAAoBD,OAFLE,EADN,OAUtB,C,kEC5BKC,EAAU,mCACVC,EAAW,gCAEXC,EAAa,mCAAG,WAAMC,GAAN,gGAEKC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,sCACoBD,IAHzB,cAEZK,EAFY,yBAKXF,EAAkBE,EAASC,KAAKC,UALrB,gCAOlBC,QAAQC,IAAR,MAPkB,yDAAH,sDAWbC,EAAc,mCAAG,WAAOnB,EAASoB,GAAhB,gGAEIP,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDV,EADC,oBACkBS,EADlB,oBAFJ,cAEbK,EAFa,yBAKZM,EAASN,EAASC,OALN,gCAOnBE,QAAQC,IAAR,MAPmB,yDAAH,wDAWdG,EAAkB,mCAAG,WAAOrB,EAASsB,GAAhB,gGAEAT,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDV,EADC,4BAC0BS,EAD1B,oBAFA,cAEjBK,EAFiB,yBAKhBQ,EAAQR,EAASC,KAAKQ,OALN,gCAOvBN,QAAQO,MAAR,MAPuB,yDAAH,wDAWlBC,EAAqB,mCAAG,WAAOzB,EAASD,GAAhB,gGAEHc,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iBACDV,EADC,4BAC0BS,EAD1B,oBAFG,cAEpBK,EAFoB,yBAKnBf,EAAWe,EAASC,KAAKC,UALN,gCAO1BC,QAAQO,MAAR,MAP0B,yDAAH,wDAWrBE,EAAiB,mCAAG,WAAOC,EAAOC,GAAd,gGAECf,EAAAA,EAAAA,IAAA,UAClBH,EADkB,gCACcD,EADd,kBAC+BkB,EAD/B,gCAFD,cAEhBb,EAFgB,yBAKfc,EAAiBd,EAASC,KAAKC,UALhB,gCAOtBC,QAAQO,MAAR,MAPsB,yDAAH,wDAWjBrB,EAAM,CACVQ,cAAAA,EACAQ,eAAAA,EACAE,mBAAAA,EACAI,sBAAAA,EACAC,kBAAAA,GAGF,K","sources":["components/Reviews.styled.js","components/Reviews.jsx","services/movieApi.jsx"],"sourcesContent":["import styled from \"styled-components\";\nexport const StyledList = styled.ul`\n  padding: 0px;\n`;\n\nexport const StyledItem = styled.li`\n  border: 2px solid black;\n  border-radius: 2px;\n  padding: 15px;\n  text-align: justify;\n  margin-bottom: 10px;\n  background-color: #fff;\n  overflow: hidden;\n`;","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport api from '../services/movieApi';\nimport { StyledList, StyledItem } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    api.fetchMovieReviewsById(movieId, setReviews);\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length < 1 ? (\n        <p>Sorry, no one has reviewed this title yet!</p>\n      ) : (\n        <StyledList>\n          {reviews.map(({ author, content, id }) => (\n            <StyledItem key={id}>\n              <p>{content}</p>\n              <h4>Review author: {author}</h4>\n            </StyledItem>\n          ))}\n        </StyledList>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = 'e31c232cf532b70b960b6c4d5d67c018';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst fetchTrending = async setTrendingMovies => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}trending/movie/day?api_key=${API_KEY}`\n    );\n    return setTrendingMovies(response.data.results);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchMovieById = async (movieId, setMovie) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return setMovie(response.data);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst fetchMovieCastById = async (movieId, setCast) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return setCast(response.data.cast);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst fetchMovieReviewsById = async (movieId, setReviews) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`\n    );\n    return setReviews(response.data.results);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst fetchMovieByQuery = async (query, setSearchedMovie) => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}search/movie?api_key=${API_KEY}&query=${query}&page=1&include_adult=false`\n    );\n    return setSearchedMovie(response.data.results);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst api = {\n  fetchTrending,\n  fetchMovieById,\n  fetchMovieCastById,\n  fetchMovieReviewsById,\n  fetchMovieByQuery,\n};\n\nexport default api;\n"],"names":["StyledList","styled","StyledItem","useState","reviews","setReviews","movieId","useParams","useEffect","api","length","map","author","content","id","API_KEY","BASE_URL","fetchTrending","setTrendingMovies","axios","response","data","results","console","log","fetchMovieById","setMovie","fetchMovieCastById","setCast","cast","error","fetchMovieReviewsById","fetchMovieByQuery","query","setSearchedMovie"],"sourceRoot":""}